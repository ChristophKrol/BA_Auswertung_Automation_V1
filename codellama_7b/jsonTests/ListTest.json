{
    "className": "List",
    "testMethods": [
        {
            "methodName": "testIsEmptyWithEmptyList",
            "code": "@Test \\nvoid testIsEmptyWithEmptyList(){\\n List list = new ArrayList<>();\\n assertTrue(list.isEmpty());\\n}"
        },
        {
            "methodName": "testIsEmptyWithNonEmptyList",
            "code": "@Test \\nvoid testIsEmptyWithNonEmptyList(){\\n List list = new ArrayList<>();\\n list.addFirst(1);\\n assertFalse(list.isEmpty());\\n}"
        },
        {
            "methodName": "testAddFirstWithNullValue",
            "code": "@Test \\nvoid testAddFirstWithNullValue(){\\n List list = new ArrayList<>();\\n list.addFirst(null);\\n assertEquals(1, list.size());\\n}"
        },
        {
            "methodName": "testGetFirstWithEmptyList",
            "code": "@Test \\nvoid testGetFirstWithEmptyList(){\\n List list = new ArrayList<>();\\n assertThrows(ListEmptyException.class, () -> list.getFirst());\\n}"
        },
        {
            "methodName": "testRemoveFirstWithEmptyList",
            "code": "@Test \\nvoid testRemoveFirstWithEmptyList(){\\n List list = new ArrayList<>();\\n assertThrows(ListEmptyException.class, () -> list.removeFirst());\\n}"
        },
        {
            "methodName": "testAddLastWithNullValue",
            "code": "@Test \\nvoid testAddLastWithNullValue(){\\n List list = new ArrayList<>();\\n list.addLast(null);\\n assertEquals(1, list.size());\\n}"
        },
        {
            "methodName": "testGetLastWithEmptyList",
            "code": "@Test \\nvoid testGetLastWithEmptyList(){\\n List list = new ArrayList<>();\\n assertThrows(ListEmptyException.class, () -> list.getLast());\\n}"
        },
        {
            "methodName": "testRemoveLastWithEmptyList",
            "code": "@Test \\nvoid testRemoveLastWithEmptyList(){\\n List list = new ArrayList<>();\\n assertThrows(ListEmptyException.class, () -> list.removeLast());\\n}"
        }
    ]
}